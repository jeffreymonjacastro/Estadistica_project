---
title: "Jeff"
format: html
editor: visual
---

# Rúbrica 1 - Variable EdLevel

Carga de librerías

```{r warning=FALSE, echo = TRUE}
library(readr)
library(dplyr)
library(readr)
library(ggplot2)
library(tidyverse)
library(stringr)
```

### Carga de datos

```{r warning=FALSE}
encuesta <- read.csv("upload_survey_results.csv")
```

### Convertimos la variable categorica a numerica con Bernulli

```{r}
columna_booleana <- str_detect(encuesta$CodingActivities, paste0("\\b", "Hobby", "\\b"))
encuesta$Hobby <- columna_booleana

columna_booleana <- str_detect(encuesta$CodingActivities, paste0("\\b", "I don’t code outside of work", "\\b"))
encuesta$OutWork <- columna_booleana

columna_booleana <- str_detect(encuesta$CodingActivities, paste0("\\b", "Freelance/contract work", "\\b"))
encuesta$Freelance <- columna_booleana

columna_booleana <- str_detect(encuesta$CodingActivities, paste0("\\b", "Contribute to open-source projects", "\\b"))
encuesta$Contribute <- columna_booleana

columna_booleana <- str_detect(encuesta$CodingActivities, paste0("\\b", "Bootstrapping a business", "\\b"))
encuesta$Business <- columna_booleana

columna_booleana <- str_detect(encuesta$CodingActivities, paste0("\\b", "School or academic work", "\\b"))
encuesta$Academic <- columna_booleana

BD <- data.frame("Hobby" = encuesta$Hobby, "OutWork" = encuesta$OutWork, "Freelance" = encuesta$Freelance, "Contribute" = encuesta$Contribute, "Business" = encuesta$Business, "Academic" = encuesta$Academic)

BD$TabProb2<- rowSums(BD)
```

```{r}
DF1 <- nrow(encuesta[encuesta$Hobby == TRUE,])
DF2 <- nrow(encuesta[encuesta$OutWork == TRUE,])
DF3 <- nrow(encuesta[encuesta$Freelance == TRUE,])
DF4 <- nrow(encuesta[encuesta$Contribute == TRUE,])
DF5 <- nrow(encuesta[encuesta$Business == TRUE,])
DF6 <- nrow(encuesta[encuesta$Academic == TRUE,])
```

### Hallamos la probabilidad en cada actividad

```{r}
ProbHobby <- DF1/nrow(encuesta)
ProbOutWork <- DF2/nrow(encuesta)
ProbFreelance <- DF3/nrow(encuesta)
ProbContribute <- DF4/nrow(encuesta)
ProbBusiness <- DF5/nrow(encuesta)
ProbAcademic <- DF6/nrow(encuesta)
```

### Tabla de probabilidad por cada actividad

```{r}
tablaProb2 <- data.frame("Hobby" = ProbHobby, "OutWork" = ProbOutWork, "Freelance" = ProbFreelance, "Contribute" = ProbContribute, "Business" = ProbBusiness, "Academic" = ProbAcademic)
tablaProb2
```

### Gráfico de barras de la Probabilidad vs Actividad

```{r}
tablaProbOrdenada <- sort(tablaProb2, decreasing = TRUE)

colores_celeste <- colorRampPalette(c("lightblue", "blue"))(length(tablaProb))

barplot(unlist(tablaProbOrdenada), xlab = "Actividad", ylab = "Probabilidad", 
        main = "Probabilidad de Coding Activities", 
        names.arg = names(tablaProbOrdenada), 
        col = colores_celeste)
```

```{r}
TabProb2 <- data.frame(table(BD$TabProb2))
TabProb2$Probabilidad <- ((as.numeric(TabProb2$Freq)/nrow(encuesta)))

TabProb2
```

### Otra forma

```{r}
Activities <- c("Hobby", "OutWork", "Freelance", "Contribute", "Business", "Academic")
```

```{r}
encuesta$TotalActivities <- 0

for (i in 1:nrow(encuesta)) {
  cont <- 0
  for (problem in Activities) {
    if (encuesta[i, problem] == TRUE){
      cont <- cont + 1
    }
  }
  encuesta[i, 'TotalActivities'] <- cont
}
```

```{r}
encuesta %>% group_by(TotalActivities) %>% count() -> probActivities
probActivities %>% rename(Frecuencia = n) -> probActivities
probActivities$ProbabilidadAtomica <- probActivities$Frecuencia / nrow(encuesta)
probActivities
```

```{r}
barplot(table(encuesta$TotalActivities),
        main = "Total de Actividades",
        xlab = "Número de actividades",
        ylab = "Frecuencia",
        col = "lightblue",
        ylim = c(0,25000)
)
```

### Validamos que la suma de probabilidades sea 1

```{r}
sum(TabProb2$Probabilidad)
```

### Diagramas

```{r}
stem(BD$TabProb2)
```

```{r}
colores_celeste <- colorRampPalette(c("lightblue", "blue"))(length(tablaProb))

barplot(height = TabProb2$Probabilidad, names.arg = TabProb2$Var1, xlab = "Cantidad de actividades", ylab = "Probabilidad", 
        main = "Probabilidad de CondingActivities", col = colores_celeste)
```
