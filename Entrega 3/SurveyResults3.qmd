# Filtrado de la base de datos (Survey Results)

-   Encuestas de Stack Overflow (33880 registros obtenidos de 73268)

```{r warning=FALSE, echo=FALSE}
library(readr)
library(dplyr)

#Leer la base de datos
encuesta = read_csv("../db/survey_results_public.csv")

```

## Revisar que la base de datos esté limpia:

Revisaremos cuantos casos completos hay

```{r}

#complete cases
table(complete.cases(encuesta))
```

Observamos que parece que ninguna observación esta completa. HORROR! Sin embargo mejor enfoquémonos en las variables que queremos analizar y revisemos de nuevo.

```{r}

#borrar las filas que no queremos
encuesta = select(encuesta, MainBranch, Employment, RemoteWork, CodingActivities, DevType, Country, EdLevel, Currency, ConvertedCompYearly, MentalHealth, Ethnicity, Gender, Age, `OpSysPersonal use`, `OpSysProfessional use`, LanguageHaveWorkedWith)

```

Ahora si, revisemos de nuevo cuantos casos completos tenemos.

```{r}
#casos completos
table(complete.cases(encuesta))
```

Tal parece que solo 34672 casos están completos, por lo que seleccionaremos justo estos.

```{r}
#eliminar nulos
encuesta = na.omit(encuesta)
```

## Revisar valores de las columnas

Para esta primera instancia analizaremos primero las variables numéricas, de esta forma podemos eliminar lo que creemos que se aleja de la realidad, como salarios extremadamente bajos que solo entorpecen el análisis.

```{r}
#minimo unos 3600 dolares anuales
encuesta = encuesta[encuesta$ConvertedCompYearly > 3600,]
```

Filtrar por los géneros. En la encuesta se permite elegir géneros de varios tipos. Sin embargo, para fines de estudio nos limitaremos a hombre o mujeres, más obviaremos a los no binarios, entre otros.

```{r}
encuesta = encuesta[encuesta$Gender == "Man" | encuesta$Gender == "Woman",]

table(encuesta$Gender)
```

Con respecto a las edades, eliminaremos a los que no prefirieron responder.

```{r}
encuesta = encuesta[encuesta$Age != "Prefer not to say",]
```

Con respecto a la parte de la encuesta donde se definen los estados de salud mental, eliminaremos las que son escritas ya que son muy dificiles de analizar y no representan una gran parte de la muestra.

```{r}
library(stringr)

#si tiene la palabra: "in your own words" eliminarla,
#ya que no es una respuesta válida
encuesta = encuesta[!str_detect(encuesta$MentalHealth, "in your own words"),]

#si tiene la palabra: "Prefer not to say" eliminarla,
#ya que no es una respuesta válida

encuesta = encuesta[!str_detect(encuesta$MentalHealth, "Prefer not to say"),]


```

Listo, eso es todo lo que querremos filtrar en la base de datos.

## Crear columnas para lenguajes de programación

Ahora crearemos columnas para cada lenguaje de programación, esto con el fin de poder hacer un análisis más sencillo.

```{r}
library(tidyverse)
library(stringr)


# Separar los lenguajes y crear columnas separadas
language <- encuesta %>%
  separate_rows(LanguageHaveWorkedWith, sep = ";") %>%
  group_by(LanguageHaveWorkedWith) %>%
  summarize() %>%
  pull()

for (name in language) {
  encuesta[name] = FALSE
}

for (i in 1:nrow(encuesta)) {
  for (elem in unlist(strsplit(encuesta$LanguageHaveWorkedWith[i],";"))){
    encuesta[i, elem] <- TRUE
  }
}



```

## Crear columnas para los problemas mentales

Ahora crearemos columnas para cada problema mental, esto con el fin de poder hacer un análisis más sencillo.

```{r}

# op1
columna_booleana <- str_detect(encuesta$MentalHealth, paste0("\\b", "concentration", "\\b"))
encuesta$Memoria <- columna_booleana

# op2
columna_booleana <- str_detect(encuesta$MentalHealth, paste0("\\b", "mood", "\\b"))
encuesta$Emotional <- columna_booleana

# op3
columna_booleana <- str_detect(encuesta$MentalHealth, paste0("\\b", "anxiety", "\\b"))
encuesta$Anxiety <- columna_booleana

# op4
columna_booleana <- str_detect(encuesta$MentalHealth, paste0("\\b", "autism", "\\b"))
encuesta$Autism <- columna_booleana

# op5
columna_booleana <- str_detect(encuesta$MentalHealth, paste0("\\b", "learning", "\\b"))
encuesta$Learning <- columna_booleana
```

## Crear columnas para sistemas operativos

```{r}
encuesta$BSD <- logical(nrow(encuesta))
encuesta$Linux_Based <- logical(nrow(encuesta))
encuesta$Windows <- logical(nrow(encuesta))
encuesta$Windows_for_Linux <- logical(nrow(encuesta))
encuesta$Mac <- logical(nrow(encuesta))

opciones_a_verificar <- c("BSD", "Linux-based", "Windows", "Windows Subsystem for Linux (WSL)",
                         "macOS")

# op1
columna_booleana <- str_detect(encuesta$`OpSysPersonal use`, paste0("\\b", "BSD", "\\b"))
encuesta$BSD <- columna_booleana

# op2
columna_booleana <- str_detect(encuesta$`OpSysPersonal use`, paste0("\\b", "based", "\\b"))
encuesta$Linux_Based <- columna_booleana

# op3
columna_booleana <- str_detect(encuesta$`OpSysPersonal use`, paste0("\\b", "Windows", "\\b"))
encuesta$Windows <- columna_booleana

# op4
columna_booleana <- str_detect(encuesta$`OpSysPersonal use`, paste0("\\b", "Subsystem", "\\b"))
encuesta$Windows_for_Linux <- columna_booleana

# op5
columna_booleana <- str_detect(encuesta$`OpSysPersonal use`, paste0("\\b", "macOS", "\\b"))
encuesta$Mac <- columna_booleana
```
